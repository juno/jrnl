version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.2.2

jobs:
  build:
    parallelism: 2
    resource_class: medium

    docker:
      - image: cimg/ruby:3.0.2-browsers
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci
          RAILS_ENV: test
      - image: cimg/postgres:13.3
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_DB: jrnl_test
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: ""

    working_directory: ~/jrnl

    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver

      - restore_cache:
          keys:
            - gem-cache-{{ .Environment.CACHE_KEY }}-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-{{ .Environment.CACHE_KEY }}-{{ arch }}
            - gem-cache-{{ .Environment.CACHE_KEY }}
            - gem-cache
      - run:
          name: Bundle rubygems
          command: |
            bundle config set clean "true"
            bundle config set path "vendor/bundle"
            bundle check || bundle install
      - save_cache:
          key: gem-cache-{{ .Environment.CACHE_KEY }}-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - yarn-cache-{{ .Environment.CACHE_KEY }}-{{ arch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-{{ .Environment.CACHE_KEY }}-{{ arch }}
            - yarn-cache-{{ .Environment.CACHE_KEY }}
            - yarn-cache
      - run:
          name: Install npm modules
          command: yarn install && yarn cache clean
      - save_cache:
          key: yarn-cache-{{ .Environment.CACHE_KEY }}-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Setup Database
          command: bin/rails db:schema:load --trace
      - run: mkdir ~/rspec
      - run:
          name: Test (rspec)
          command: |
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings --timings-type=filename)
            bin/rspec --format progress --format RspecJunitFormatter -o ~/rspec/rspec.xml -- $TESTFILES
      - store_test_results:
          path: ~/rspec
